daemon off;

worker_processes auto;

error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;

    keepalive_timeout 65;

    server {
        listen 80;

        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /tmp;
            add_header Cache-Control no-cache;

            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';

            if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Max-Age' 1728000;
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
              add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';

              add_header 'Content-Length' 0;
              add_header 'Content-Type' 'text/plain charset=UTF-8';

              return 204;
            }
        }

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root /etc/nginx;
        }

        location /crossdomain.xml {
            default_type text/xml;
            return 200 '<?xml version="1.0"?>
                <!DOCTYPE cross-domain-policy SYSTEM "http://www.adobe.com/xml/dtds/cross-domain-policy.dtd">
                <cross-domain-policy>
                    <site-control permitted-cross-domain-policies="all"/>
                    <allow-access-from domain="*" secure="false"/>
                    <allow-http-request-headers-from domain="*" headers="*" secure="false"/>
                </cross-domain-policy>';
            expires 24h;
        }
    }
}

rtmp_auto_push on;

rtmp {
    server {
        listen 1935;
        notify_method get;

        chunk_size 131072;
        max_message 12M;
        buflen 2s;

        application encoder {
            live on;
            drop_idle_publisher 5s;
            allow play 127.0.0.1;
            deny play all;

            exec_push ffmpeg -i rtmp://localhost/encoder/$name
              -strict -2 -c:a aac -b:a 128k -c:v libx264 -b:v 2500k -f flv -r 30 -s 1280x720 -preset superfast -profile:v baseline rtmp://localhost/hls/$name_720p
              -strict -2 -c:a aac -b:a 128k -c:v libx264 -b:v 1000k -f flv -r 30 -s 854x480 -preset superfast -profile:v baseline rtmp://localhost/hls/$name_480p
              -strict -2 -c:a aac -b:a 128k -c:v libx264 -b:v 750k -f flv -r 30 -s 640x360 -preset superfast -profile:v baseline rtmp://localhost/hls/$name_360p
              -strict -2 -c:a aac -b:a 128k -c:v libx264 -b:v 400k -f flv -r 30 -s 426x240 -preset superfast -profile:v baseline rtmp://localhost/hls/$name_240p;
        }

        application player {
            live on;
            allow publish 127.0.0.1;
            deny publish all;

            pull rtmp://localhost/encoder live=1;

            wait_key on;
            wait_video on;
        }

        application hls {
            live on;
            allow publish 127.0.0.1;
            deny publish all;

            hls on;
            hls_path /tmp/hls;
            hls_fragment_naming system;
            hls_fragment 15s;
            hls_nested on;

            hls_variant _720p BANDWIDTH=2628000,RESOLUTION=1280x720;
            hls_variant _480p BANDWIDTH=1128000,RESOLUTION=854x480;
            hls_variant _360p BANDWIDTH=878000,RESOLUTION=640x360;
            hls_variant _240p BANDWIDTH=528000,RESOLUTION=426x240;
        }
    }
}
